@using Microsoft.AspNetCore.Components.Authorization
@using PetAdoption.Services.Interfaces
@using PetAdoption.Services
@implements IDisposable
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService UserService
@inject NavigationManager Navigation
@inject ProfileStateService ProfileState

<nav class="navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light" id="ftco-navbar">
    <div class="container">
        <a class="navbar-brand" href="/" @onclick="HandleNavigation" @onclick:preventDefault="@(!isProfileComplete)">
            <span class="flaticon-pawprint-1 mr-2"></span>Pet Adoption
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="fa fa-bars"></span> Menu
        </button>
        <div class="collapse navbar-collapse" id="ftco-nav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link @GetDisabledClass()" href="/" @onclick='() => HandleNavigationClick("/")' @onclick:preventDefault="true">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @GetDisabledClass()" href="/pets" @onclick='() => HandleNavigationClick("/pets")' @onclick:preventDefault="true">Pets</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @GetDisabledClass()" href="/vet" @onclick='() => HandleNavigationClick("/vet")' @onclick:preventDefault="true">Veterinarian</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @GetDisabledClass()" href="/blog" @onclick='() => HandleNavigationClick("/blog")' @onclick:preventDefault="true">Blog</a>
                </li>

                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/profile">
                                <span class="fa fa-user mr-1"></span><span class="nav-text">Profile</span>
                            </NavLink>
                        </li>
                        <AuthorizeView Roles="Shelter,Admin" Context="shelterContext">
                            <Authorized>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle @GetDisabledClass()" href="#" id="shelterDropdown" role="button" 
                                       data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" 
                                       @onclick:preventDefault="@(!isProfileComplete)">
                                        <span class="fa fa-home mr-1"></span><span class="nav-text">Shelter</span>
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="shelterDropdown">
                                        <a class="dropdown-item @GetDisabledClass()" href="/shelter" 
                                           @onclick='() => HandleNavigationClick("/shelter")' @onclick:preventDefault="true">
                                            <span class="fa fa-building mr-1"></span> My Shelter
                                        </a>
                                        <a class="dropdown-item @GetDisabledClass()" href="/mypets" 
                                           @onclick='() => HandleNavigationClick("/mypets")' @onclick:preventDefault="true">
                                            <span class="fa fa-paw mr-1"></span> Manage Pets
                                        </a>
                                    </div>
                                </li>
                            </Authorized>
                        </AuthorizeView>
                        <AuthorizeView Policy="AdminOnly" Context="adminContext">
                            <Authorized>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle @GetDisabledClass()" href="#" id="adminDropdown" role="button" 
                                       data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" 
                                       @onclick:preventDefault="@(!isProfileComplete)">
                                        <span class="fa fa-cog mr-1"></span><span class="nav-text">Admin</span>
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="adminDropdown">
                                        <a class="dropdown-item @GetDisabledClass()" href="/admin/users" 
                                           @onclick='() => HandleNavigationClick("/admin/users")' @onclick:preventDefault="true">
                                            <span class="fa fa-users mr-1"></span> Manage Users
                                        </a>
                                        <a class="dropdown-item @GetDisabledClass()" href="/admin/shelters" 
                                           @onclick='() => HandleNavigationClick("/admin/shelters")' @onclick:preventDefault="true">
                                            <span class="fa fa-home mr-1"></span> Manage Shelters
                                        </a>
                                    </div>
                                </li>
                            </Authorized>
                        </AuthorizeView>
                        <li class="nav-item">
                            <a class="nav-link" href="/api/auth/logout">
                                <span class="fa fa-sign-out mr-1"></span><span class="nav-text">Logout</span>
                            </a>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item ml-auto">
                            <NavLink class="nav-link btn btn-primary text-white px-3 py-2 ml-2" href="/login">
                                <span class="fa fa-sign-in mr-1"></span><span class="nav-text">Login</span>
                            </NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private bool isProfileComplete = true;
    private string? userEmail;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userEmail = user.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value;
            if (!string.IsNullOrEmpty(userEmail))
            {
                var currentUser = await UserService.GetUserByEmailAsync(userEmail);
                if (currentUser != null)
                {
                    isProfileComplete = currentUser.IsProfileCompleted;
                }
            }
        }

        // Subscribe to profile completion event
        ProfileState.OnProfileCompleted += HandleProfileCompleted;
    }

    private void HandleProfileCompleted()
    {
        isProfileComplete = true;
        StateHasChanged(); // Force re-render
    }

    private void HandleNavigationClick(string path)
    {
        if (isProfileComplete)
        {
            Navigation.NavigateTo(path);
        }
        else
        {
            // User must complete profile first - stay on current page or redirect to profile
            var currentPath = new Uri(Navigation.Uri).AbsolutePath;
            if (!currentPath.Contains("/profile"))
            {
                Navigation.NavigateTo("/profile");
            }
        }
    }

    private void HandleNavigation(Microsoft.AspNetCore.Components.Web.MouseEventArgs e)
    {
        HandleNavigationClick("/");
    }

    private string GetDisabledClass()
    {
        return !isProfileComplete ? "disabled text-muted" : "";
    }

    public void Dispose()
    {
        // Unsubscribe from event to prevent memory leaks
        ProfileState.OnProfileCompleted -= HandleProfileCompleted;
    }
}

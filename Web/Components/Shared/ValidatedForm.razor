@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JSRuntime

<EditForm Model="@Model" OnValidSubmit="@HandleValidSubmitInternal" OnInvalidSubmit="@HandleInvalidSubmitInternal">
    @ChildContent
</EditForm>

@code {
    [Parameter, EditorRequired]
    public object Model { get; set; } = default!;

    [Parameter, EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    public EventCallback? OnInvalidSubmit { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool ScrollToTopOnValidation { get; set; } = true;

    [Parameter]
    public bool IsModal { get; set; } = false;

    [Parameter]
    public string? ModalId { get; set; }

    private async Task HandleValidSubmitInternal()
    {
        if (ScrollToTopOnValidation)
        {
            await ScrollToTop();
        }
        
        await OnValidSubmit.InvokeAsync();
    }

    private async Task HandleInvalidSubmitInternal()
    {
        if (ScrollToTopOnValidation)
        {
            await ScrollToTop();
        }

        if (OnInvalidSubmit.HasValue)
        {
            await OnInvalidSubmit.Value.InvokeAsync();
        }
    }

    private async Task ScrollToTop()
    {
        if (IsModal && !string.IsNullOrEmpty(ModalId))
        {
            // Scroll modal content to top
            await JSRuntime.InvokeVoidAsync("scrollModalToTop", ModalId);
        }
        else
        {
            // Scroll page to top
            await JSRuntime.InvokeVoidAsync("scrollToTopInstant");
        }
    }
}